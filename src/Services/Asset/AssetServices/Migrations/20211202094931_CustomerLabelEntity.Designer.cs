// <auto-generated />
using System;
using AssetServices.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssetServices.Migrations
{
    [DbContext(typeof(AssetsContext))]
    [Migration("20211202094931_CustomerLabelEntity")]
    partial class CustomerLabelEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AssetServices.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssetCategoryId")
                        .HasColumnType("int");

                    b.Property<Guid?>("AssetHolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("LifecycleType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ManagedByDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssetCategoryId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("AssetServices.Models.AssetCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentAssetCategoryId")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentAssetCategoryId");

                    b.ToTable("AssetCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = new Guid("1d4988aa-ca58-4f02-b2f5-8eba7d060b33"),
                            CreatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 457, DateTimeKind.Local).AddTicks(824),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastUpdatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 460, DateTimeKind.Local).AddTicks(4748),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = new Guid("152a03f7-7bb0-4b97-b119-509939b87645"),
                            CreatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 461, DateTimeKind.Local).AddTicks(5797),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastUpdatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 461, DateTimeKind.Local).AddTicks(5818),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("AssetServices.Models.AssetCategoryTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetCategoryId")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssetCategoryId");

                    b.ToTable("AssetCategoryTranslation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetCategoryId = 1,
                            CreatedBy = new Guid("2eaf71c1-6888-4883-8c13-0524bf6205c7"),
                            CreatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 462, DateTimeKind.Local).AddTicks(550),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Mobile phone",
                            IsDeleted = false,
                            Language = "EN",
                            LastUpdatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 462, DateTimeKind.Local).AddTicks(566),
                            Name = "Mobile phone",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            AssetCategoryId = 1,
                            CreatedBy = new Guid("77be706e-17a4-4634-b9dd-5c8d239825bf"),
                            CreatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 462, DateTimeKind.Local).AddTicks(1829),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Mobiltelefon",
                            IsDeleted = false,
                            Language = "NO",
                            LastUpdatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 462, DateTimeKind.Local).AddTicks(1841),
                            Name = "Mobiltelefon",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            AssetCategoryId = 2,
                            CreatedBy = new Guid("9e6ad69f-675c-435a-b5e7-ff94e5cefd85"),
                            CreatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 462, DateTimeKind.Local).AddTicks(1852),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Tablet",
                            IsDeleted = false,
                            Language = "EN",
                            LastUpdatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 462, DateTimeKind.Local).AddTicks(1854),
                            Name = "Tablet",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            AssetCategoryId = 2,
                            CreatedBy = new Guid("d046ecb6-39c6-488a-b611-4a4a16acd2af"),
                            CreatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 462, DateTimeKind.Local).AddTicks(1869),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Nettbrett",
                            IsDeleted = false,
                            Language = "NO",
                            LastUpdatedDate = new DateTime(2021, 12, 2, 10, 49, 30, 462, DateTimeKind.Local).AddTicks(1871),
                            Name = "Nettbrett",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("AssetServices.Models.CustomerLabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("CustomerLabel");
                });

            modelBuilder.Entity("AssetServices.Models.HardwareAsset", b =>
                {
                    b.HasBaseType("AssetServices.Models.Asset");

                    b.Property<string>("MacAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("HardwareAsset");
                });

            modelBuilder.Entity("AssetServices.Models.SoftwareAsset", b =>
                {
                    b.HasBaseType("AssetServices.Models.Asset");

                    b.Property<string>("SerialKey")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SoftwareAsset");
                });

            modelBuilder.Entity("AssetServices.Models.MobilePhone", b =>
                {
                    b.HasBaseType("AssetServices.Models.HardwareAsset");

                    b.ToTable("MobilePhone");
                });

            modelBuilder.Entity("AssetServices.Models.Tablet", b =>
                {
                    b.HasBaseType("AssetServices.Models.HardwareAsset");

                    b.ToTable("Tablet");
                });

            modelBuilder.Entity("AssetServices.Models.Subscription", b =>
                {
                    b.HasBaseType("AssetServices.Models.SoftwareAsset");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("AssetServices.Models.Asset", b =>
                {
                    b.HasOne("AssetServices.Models.AssetCategory", "AssetCategory")
                        .WithMany()
                        .HasForeignKey("AssetCategoryId");

                    b.Navigation("AssetCategory");
                });

            modelBuilder.Entity("AssetServices.Models.AssetCategory", b =>
                {
                    b.HasOne("AssetServices.Models.AssetCategory", "ParentAssetCategory")
                        .WithMany()
                        .HasForeignKey("ParentAssetCategoryId");

                    b.Navigation("ParentAssetCategory");
                });

            modelBuilder.Entity("AssetServices.Models.AssetCategoryTranslation", b =>
                {
                    b.HasOne("AssetServices.Models.AssetCategory", null)
                        .WithMany("Translations")
                        .HasForeignKey("AssetCategoryId");
                });

            modelBuilder.Entity("AssetServices.Models.CustomerLabel", b =>
                {
                    b.OwnsOne("AssetServices.Models.Label", "Label", b1 =>
                        {
                            b1.Property<int>("CustomerLabelId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Color")
                                .HasColumnType("int");

                            b1.Property<string>("Text")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CustomerLabelId");

                            b1.ToTable("CustomerLabel");

                            b1.WithOwner()
                                .HasForeignKey("CustomerLabelId");
                        });

                    b.Navigation("Label");
                });

            modelBuilder.Entity("AssetServices.Models.HardwareAsset", b =>
                {
                    b.HasOne("AssetServices.Models.Asset", null)
                        .WithOne()
                        .HasForeignKey("AssetServices.Models.HardwareAsset", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.OwnsMany("AssetServices.Models.AssetImei", "Imeis", b1 =>
                        {
                            b1.Property<int>("HardwareAssetId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<long>("Imei")
                                .HasColumnType("bigint");

                            b1.HasKey("HardwareAssetId", "Id");

                            b1.ToTable("AssetImei");

                            b1.WithOwner()
                                .HasForeignKey("HardwareAssetId");
                        });

                    b.Navigation("Imeis");
                });

            modelBuilder.Entity("AssetServices.Models.SoftwareAsset", b =>
                {
                    b.HasOne("AssetServices.Models.Asset", null)
                        .WithOne()
                        .HasForeignKey("AssetServices.Models.SoftwareAsset", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetServices.Models.MobilePhone", b =>
                {
                    b.HasOne("AssetServices.Models.HardwareAsset", null)
                        .WithOne()
                        .HasForeignKey("AssetServices.Models.MobilePhone", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetServices.Models.Tablet", b =>
                {
                    b.HasOne("AssetServices.Models.HardwareAsset", null)
                        .WithOne()
                        .HasForeignKey("AssetServices.Models.Tablet", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetServices.Models.Subscription", b =>
                {
                    b.HasOne("AssetServices.Models.SoftwareAsset", null)
                        .WithOne()
                        .HasForeignKey("AssetServices.Models.Subscription", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetServices.Models.AssetCategory", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
