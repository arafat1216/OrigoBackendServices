# Deploy to Azure Kubernetes Service

trigger:
  branches:
    include:
    - trunk
  paths:
    include:
    - azure-pipelines-productcatalog.yml
    - charts/product-catalog-api
    - src/Boilerplate/Boilerplate.EntityFramework
    - src/Boilerplate/Boilerplate.EntityFramework.UnitTest
    - src/Services/ProductCatalog

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '09ee8083-2a55-4731-876c-d6df7059bd8f'
  artifactsFeedSource: 'https://pkgs.dev.azure.com/mytos/OrigoV2/_packaging/Origo2/nuget/v3/index.json'
  imageRepository: 'productcatalog'
  containerRegistry: 'origov2acr.azurecr.io'
  
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - template: general-build.yaml
    parameters:
      vmImage: 'ubuntu-latest'
      dbContext: 'ProductCatalogContext'
      dbProject: 'src/Services/ProductCatalog/ProductCatalog.Infrastructure/ProductCatalog.Infrastructure.csproj'
      migrationScriptOutputDir: '$(build.artifactstagingdirectory)/migrations'
      buildRepositoryLocalPath: '$(Build.Repository.LocalPath)'
      imageRepository: '$(imageRepository)'
      dockerfilePath: 'src/Services/ProductCatalog/ProductCatalog.API/Dockerfile'
      dockerRegistryServiceConnection: '09ee8083-2a55-4731-876c-d6df7059bd8f'
      buildId: '$(Build.BuildId)'
      sonarToken: '$(SonarToken)'
      artifactsFeedSource: 'https://pkgs.dev.azure.com/mytos/OrigoV2/_packaging/Origo2/nuget/v3/index.json'
      vssNugetAccessToken: $(VSS_NUGET_ACCESSTOKEN)
      buildSourcesDirectory: $(Build.SourcesDirectory)


- stage: DeployDev
  displayName: Deploy to Dev
  condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
  dependsOn: Build
  variables:
  - group: ProductCatalogLibrary
  jobs:
  - template: general-deploy.yaml
    parameters:
      vmImage: 'ubuntu-latest'
      environment: 'OrigoV2AKS_Dev.develop'
      artifactDirectory: $(System.ArtifactsDirectory)
      dbConnection: '$(ProductCatalogDbConnection)'
      releaseName: productcatalogservices
      namespace: develop
      tag: '$(Build.BuildId)'
      pipelineWorkspace: $(Pipeline.Workspace)

- stage: DeployTest
  displayName: Deploy to Test
  dependsOn: DeployDev
  variables:
  - group: ProductCatalogLibrary
  jobs:
  - template: general-deploy.yaml
    parameters:
      vmImage: 'ubuntu-latest'
      environment: 'OrigoV2AKS.test'
      artifactDirectory: $(System.ArtifactsDirectory)
      dbConnection: '$(ProductCatalogDbConnectionTest)'
      releaseName: productcatalogservices
      namespace: test
      tag: '$(Build.BuildId)'
      pipelineWorkspace: $(Pipeline.Workspace)

- stage: DeployProd
  displayName: Deploy to Prod
  dependsOn: DeployTest
  variables:
  - group: ProductCatalogLibrary
  jobs:
  - template: general-deploy.yaml
    parameters:
      vmImage: 'ubuntu-latest'
      environment: 'OrigoV2AKS.prod'
      artifactDirectory: $(System.ArtifactsDirectory)
      dbConnection: '$(ProductCatalogDbConnectionProd)'
      releaseName: productcatalogservices
      namespace: prod
      tag: '$(Build.BuildId)'
      pipelineWorkspace: $(Pipeline.Workspace)