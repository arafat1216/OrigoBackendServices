# Build and Deploy to Azure Kubernetes Service

trigger:
  branches:
    include:
    - trunk
  paths:
    include:
    - azure-pipelines-hardware-service-order.yml
    - src/Core
    - charts/hardware-service-order-api
    - src/Services/HardwareServiceOrder

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '09ee8083-2a55-4731-876c-d6df7059bd8f'
  artifactsFeedSource: 'https://pkgs.dev.azure.com/mytos/OrigoV2/_packaging/Origo2/nuget/v3/index.json'
  imageRepository: 'hardwareserviceorder'
  containerRegistry: 'origov2acr.azurecr.io'
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
    pullRequestKey: '$(System.PullRequest.PullRequestId)'
    pullRequestSourceBranch: '$(System.PullRequest.SourceBranch)'
  ${{ else }}:
    pullRequestKey: ''
    pullRequestSourceBranch: ''

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - template: general-build.yaml
    parameters:
      vmImage: 'ubuntu-latest'
      dbContext: 'HardwareServiceOrderContext'
      dbProject: 'src/Services/HardwareServiceOrder/HardwareServiceOrderServices/HardwareServiceOrderServices.csproj'
      migrationScriptOutputDir: '$(build.artifactstagingdirectory)/migrations'
      buildRepositoryLocalPath: '$(Build.Repository.LocalPath)'
      imageRepository: '$(imageRepository)'
      dockerfilePath: 'src/Services/HardwareServiceOrder/HardwareServiceOrder.API/Dockerfile'
      dockerRegistryServiceConnection: '09ee8083-2a55-4731-876c-d6df7059bd8f'
      buildId: '$(Build.BuildId)'
      sonarToken: '$(SonarToken)'
      artifactsFeedSource: 'https://pkgs.dev.azure.com/mytos/OrigoV2/_packaging/Origo2/nuget/v3/index.json'
      buildSourcesDirectory: $(Build.SourcesDirectory)
      useLoggingDbContext: false
      chartName: 'hardware-service-order-api'
      pullRequestKey: '$(pullRequestKey)'
      pullRequestSourceBranch: '$(pullRequestSourceBranch)'

- stage: DeployDev
  displayName: Deploy to Dev
  condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
  dependsOn: Build
  variables:
  - group: HardwareServiceOrderLibrary
  jobs:
  - template: general-deploy.yaml
    parameters:
      vmImage: 'ubuntu-latest'
      environment: 'OrigoV2AKS_Dev.develop'
      artifactDirectory: $(System.ArtifactsDirectory)
      dbConnection: '$(HardwareServiceOrderDbConnection)'
      releaseName: hardwareserviceorderservices
      namespace: develop
      tag: '$(Build.BuildId)'
      pipelineWorkspace: $(Pipeline.Workspace)
      useLoggingDb: false
      generateReleaseNotes: true
      releaseDocName: 'Release_$(Build.BuildNumber).md'

- stage: DeployTest
  displayName: Deploy to Test
  dependsOn: DeployDev
  variables:
  - group: HardwareServiceOrderLibrary
  jobs:
  - template: general-deploy.yaml
    parameters:
      vmImage: 'ubuntu-latest'
      environment: 'OrigoV2AKS.test'
      artifactDirectory: $(System.ArtifactsDirectory)
      dbConnection: '$(HardwareServiceOrderDbConnectionTest)'
      releaseName: hardwareserviceorderservices
      namespace: test
      tag: '$(Build.BuildId)'
      pipelineWorkspace: $(Pipeline.Workspace)
      useLoggingDb: false
      generateReleaseNotes: true
      releaseDocName: 'Release_$(Build.BuildNumber).md'

- stage: DeployProd
  displayName: Deploy to Prod
  dependsOn: DeployTest
  variables:
  - group: HardwareServiceOrderLibrary
  jobs:
  - template: general-deploy.yaml
    parameters:
      vmImage: 'ubuntu-latest'
      environment: 'OrigoV2AKS.prod'
      artifactDirectory: $(System.ArtifactsDirectory)
      dbConnection: '$(HardwareServiceOrderDbConnectionProd)'
      releaseName: hardwareserviceorderservices
      namespace: prod
      tag: '$(Build.BuildId)'
      pipelineWorkspace: $(Pipeline.Workspace)
      useLoggingDb: false
      generateReleaseNotes: true
      releaseDocName: 'Release_$(Build.BuildNumber).md'